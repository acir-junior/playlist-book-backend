name: Deploy Playlist books backend

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest
    
        steps:
            - name: Checkout do código
              uses: actions/checkout@v3

            - name: Criar pacote para envio
              run: tar -czf backend.tar.gz .dockerignore Dockerfile docker-compose.yml src package.json tsconfig.json .env.example

            - name: Enviar pacote para servidor EC2 aws
              env: 
                SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
                EC2_HOST: ${{ secrets.EC2_HOST }}
                EC2_USER: ${{ secrets.EC2_USER }}
              run: |
                echo "$SSH_PRIVATE_KEY" > private_key.pem
                chmod 600 private_key.pem
                scp -i private_key.pem -o StrictHostKeyChecking=no backend.tar.gz $EC2_USER@$EC2_HOST:/home/$EC2_USER/
            
            - name: Conectar ao servidor EC2 aws e configurar backend
              env:
                SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
                EC2_HOST: ${{ secrets.EC2_HOST }}
                EC2_USER: ${{ secrets.EC2_USER }}
              run: |
                ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
                # Navegar para a pasta do backend
                cd /home/$EC2_USER/

                # Parar e remover containers existentes
                docker-compose down

                # Remover arquivos antigos e extrair os novos
                rm -rf backend
                mkdir backend
                tar -xzf backend.tar.gz -C backend
                cd backend

                # Criar o .env com as variáveis de ambiente seguras
                echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" > .env
                echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
                echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
                echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
                echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
                echo 'DATABASE_SCHEMA="${{ secrets.DATABASE_SCHEMA }}"' >> .env
                echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
                echo "GOOGLE_BOOKS_KEY=${{ secrets.GOOGLE_BOOKS_KEY }}" >> .env

                # Construir e rodar os containers
                docker compose up --build -d
                EOF 

