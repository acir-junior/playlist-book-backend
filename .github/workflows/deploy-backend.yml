name: Deploy Playlist books backend

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest
    
        steps:
            - name: Checkout do código
              uses: actions/checkout@v3

            - name: Criar pacote para envio
              run: tar -czf backend.tar.gz Dockerfile docker-compose.yml src package.json tsconfig.json .env.example

            - name: Enviar pacote para servidor EC2 AWS
              env: 
                SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
                EC2_HOST: ${{ secrets.EC2_HOST }}
                EC2_USER: ${{ secrets.EC2_USER }}
              run: |
                printf "%s" "$SSH_PRIVATE_KEY" > private_key.pem
                chmod 600 private_key.pem
                scp -i private_key.pem -o StrictHostKeyChecking=no backend.tar.gz $EC2_USER@$EC2_HOST:/home/$EC2_USER/

            - name: Conectar ao servidor EC2 AWS e configurar backend
              env:
                SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
                EC2_HOST: ${{ secrets.EC2_HOST }}
                EC2_USER: ${{ secrets.EC2_USER }}
              run: |
                ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
                
                # Definir pasta do backend
                WORKDIR="/home/$EC2_USER/backend"

                # Parar e remover containers existentes
                sudo docker-compose down || true
                
                # Remover arquivos antigos e extrair os novos
                sudo rm -rf $WORKDIR
                sudo mkdir -p $WORKDIR
                sudo tar -xzf /home/$EC2_USER/backend.tar.gz -C $WORKDIR
                
                # Criar o .env com as variáveis de ambiente
                cat <<EOT | sudo tee $WORKDIR/.env > /dev/null
                DATABASE_USER=${{ secrets.DATABASE_USER }}
                DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
                DATABASE_HOST=${{ secrets.DATABASE_HOST }}
                DATABASE_PORT=${{ secrets.DATABASE_PORT }}
                DATABASE_NAME=${{ secrets.DATABASE_NAME }}
                DATABASE_SCHEMA="${{ secrets.DATABASE_SCHEMA }}"
                DATABASE_URL=${{ secrets.DATABASE_URL }}
                GOOGLE_BOOKS_KEY=${{ secrets.GOOGLE_BOOKS_KEY }}
                EOT

                # Ajustar permissões
                sudo chmod 644 $WORKDIR/.env
                sudo chown -R $EC2_USER:$EC2_USER $WORKDIR

                # Construir e rodar os containers
                cd $WORKDIR
                sudo docker-compose up --build -d
                EOF
